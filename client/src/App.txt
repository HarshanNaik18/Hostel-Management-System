import React, { useState, useEffect, useContext } from "react";
import "./App.css";
import {
  BrowserRouter as Router,
  Routes,
  Route,
  Navigate,
} from "react-router-dom";
import AdminLogin from "./Components/Admin/AdminLogin/AdminLogin";
import Dashboard from "./Components/Admin/Dashboard/Dashboard";
import Tenants from "./Components/Admin/Tenants/Tenants";
import RoomsAllotment from "./Components/Admin/RoomAllotment/RoomsAllotment";
import RoomUpdate from "./Components/Admin/RoomUpdate/RoomUpdate";
import TenantsInfo from "./Components/Admin/TenantsInfo/TenantsInfo";
import VaccatedTanats from "./Components/Admin/Tenants/VaccatedTanats";
import AllTenants from "./Components/Admin/Tenants/AllTenanats";
import RoomApplicationRequest from "./Components/Admin/RoomApplicationReq/RoomApplicationRequest";
import FeesSection from "./Components/Admin/FeesSection/FeesSection";
import AddRooms from "./Components/Admin/RoomUpdate/AddRoom";
import { ToastContainer, toast } from "react-toastify";
import Enquiries from "./Components/Admin/Enquiries/Enquiries";
import { AdminAuthContext } from "./ContextAPI/AdminAuthContext";
function App() {
  const { currentUser } = useContext(AdminAuthContext);
  const ProtectedRoute = ({ children }) => {
    if (!currentUser) {
      return <Navigate to="/admin/login" />;
    }
    return children;
  };
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const onPageLoad = () => {
      setIsLoading(true);
    };

    if (document.readyState === "complete") {
      onPageLoad();
    } else {
      window.addEventListener("load", onPageLoad);
      return () => window.removeEventListener("load", onPageLoad);
    }
  }, []);

  useEffect(() => {
    // const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

    const onlineHandler = () => {
      // setIsOnline(true);
      toast.success("Back to online");
    };

    const offlineHandler = async () => {
      // setIsOnline(false);
      toast.error("You are in offline");
      // await delay(3000);
      // offlineHandler();
    };

    window.addEventListener("online", onlineHandler);
    window.addEventListener("offline", offlineHandler);

    return () => {
      window.removeEventListener("online", onlineHandler);
      window.removeEventListener("offline", offlineHandler);
    };
  }, []);

  return !isLoading ? (
    <div className="page-loader">
      <div className="loader"></div>
    </div>
  ) : (
    <div className="App">
      <Router>
        <Routes>
          <Route
            exact
            path="/"
            element={
              <ProtectedRoute>
                <Dashboard />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin"
            element={
              <ProtectedRoute>
                <Dashboard />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/dashboard"
            element={
              <ProtectedRoute>
                <Dashboard />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/tenants"
            element={
              <ProtectedRoute>
                <Tenants />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/tenants/active"
            element={
              <ProtectedRoute>
                <Tenants />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/tenants/vacated"
            element={<VaccatedTanats />}
          />
          <Route exact path="/admin/tenants/all" element={<AllTenants />} />
          <Route exact path="/admin/tenants/info" element={<TenantsInfo />} />
          <Route
            exact
            path="/admin/rooms_allotment"
            element={
              <ProtectedRoute>
                <RoomsAllotment />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/rooms_allotment/update"
            element={
              <ProtectedRoute>
                <RoomUpdate />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/rooms_allotment/add"
            element={
              <ProtectedRoute>
                <AddRooms />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/request"
            element={
              <ProtectedRoute>
                <RoomApplicationRequest />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/enquiries"
            element={
              <ProtectedRoute>
                <Enquiries />
              </ProtectedRoute>
            }
          />
          <Route
            exact
            path="/admin/fees"
            element={
              <ProtectedRoute>
                <FeesSection />
              </ProtectedRoute>
            }
          />
          <Route exact path="/admin/login" element={<AdminLogin />} />
          <Route exact path="/login" element={<AdminLogin />} />
        </Routes>
      </Router>
      <ToastContainer />
    </div>
  );
}

export default App;
